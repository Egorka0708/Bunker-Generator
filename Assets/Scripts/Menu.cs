using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.IO;
using System.Reflection;
using Random = System.Random;
using UnityEngine.UI;

public class Menu : MonoBehaviour
{
    public InputField numberOfPlayersField;
    public Text fileText;
    public InputField numberOfChangesField;
    public GameObject nextWindow;

    Random rnd = new Random();
    string[] person = new string[10];
    int num = 0;
    string inf;
    string change;
    int numb = 0;
    string path = @"C:\Bunker\Замены";

    public static int countProfession = 50;
    public static int countHealth = 30;
    public static int countPhobia = 30;
    public static int countHobby = 30;
    public static int countAddInf = 30;
    public static int countCharacter = 30;
    public static int countAction = 50;
    public static int countBaggage = 50;
    public static int countCatastrophe = 7;


    public string[] profession = new string[]
    {"бизнесмен", "строитель", "охранник", "философ", "ландшафтный дизайнер", "бармен (лечит алкоголизм)", "вор", "ювелир", "слесарь", "гонщик", "ученый", "географ", "психолог (лечит фобию)", "военный", "археолог", "химик", "агроном/почвовед", "авиадиспетчер", "сантехник", "фермер", "спортсмен", "юрист", "учитель старших классов", "кибер-спортсмен", "проститутка", "писатель", "эколог", "журналист", "охотник", "разнорабочий", "президент", "аквалангист", "хирург", "сексолог (лечит чайлдфри)", "автомеханик", "биолог", "судья", "физик", "наёмный убийца", "инженер-конструктор", "животновод", "актёр", "инженер", "тамада", "полицейский", "инструктор по выживанию", "Телеведущий", "программист", "дворник", "математик", "таксист", "учитель младших классовё", "стриптизёр", "порно-актёр", "Безработный", "Стример", "Консультант Орифлейм", "космонавт", "рыбак", "Блоггер", "Фотограф", "Продавец", "Акушер-гинеколог (рожает тройню)", "Генетик", "Логопед (лечит дефект речи)", "Онколог (лечит онкологические заболевания)", "Фитнес-тренер (лечит ожирение)", "Эпидемиолог", "Уролог (лечит импотенцию)", "Египтолог", "Востоковед", "Уфолог", "Биоинженер", "Переводчик", "Обжшник (Алкоголик)", "Шахтёр (лечит боязнь темноты и клаустрофобию)", "Швея", "Электрик", "Переплётчик", "Бортинженер", "Кок", "Капитан судна (Лечит морскую болезнь)", "Гитарист", "Пианист", "Мастер маникюра-педикюра", "Визажист", "Танцор", "Каскадёр", "Уборщик", "Сыровар", "Бахчевод", "Эндокринолог (Лечит диабет)", "Психиатор (Лечит шизофрению или любую зависимость)", "Терапевт (Вскрывает здоровье любого игрока)", "Биоинженер(Делает 2 протеза)", "Повар (Заменяет анорексию на ожирение)", "Диетолог (Лечит анорексию и ожирение)", "Сурдолог (Лечит шум в ушах)", "Переговорщик", "Пожарный", "Священник", "Наркодиллер", "Клоун", "Физичка", "Стендапер"};
    public string[] health = new[]
    {"Полностью здоров", "Дефект речи", "Алкоголизм", "Альбинизм", "Биополярное расстройство", "Токсикомания", "Диабет", "Шизофрения мин степени", "Аллергия на птиц и перья", "Глухо-немой", "Аллергия на лекарства", "Полностью здоров", "Без ноги", "Психическая неустойчивость", "ДЦП", "Гетерохромия", "Рак (осталось около года)", "Без руки", "Без рук", "Псориаз", "Гемофилия (несворачиваемость крови)", "Косоглазие", "Полностью здоров", "Без ног", "Слепой", "СПИД (осталось жить 10-20 дней)", "Наркомания", "Аллергия на шерсть", "ВИЧ 1- 2 стадии", "Импотенция (фригидность)", "Ожирение", "Гепатит С", "Анорексия", "Болезнь Альцгеймера(Если меньше 51 года, то полностью здоров)" , "Коронавирус", "Витаминоз", "Авитаминоз", "Рахит", "Куриная слепота", "Цынга", "Мигрень", "Депрессия", "Камни в почках", "Малолетний дебил", "Хронический насморк", "Шум в ушах", "Аутизм"};
    public string[] phobia = new[]
    {"Гоплофобия (боязнь оружия)", "Нет фобий", "Боязнь чужих фобий", "Нет фобий", "Агорафобия (боязнь открытого пространства)", "Аквафобия (боязнь воды)", "Танатофобия (страх умереть)", "Офидиофобия (боязнь змей)", "Аутофобия (боязнь одиночества)", "Фобия рынков", "Айхмофобоия (боязнь острых предметов)", "Гематофобия (боязнь вида крови)", "Турофобия (боязнь сыра)", "Акрофобия (страх высоты)", "Коулрофобия (боязнь клоунов)", "Арахнофобия (боязнь пауков)", "Вагинофобия (страх женских половых органов)", "Клаустрофобия", "Глоссофобия (боязнь выступлений на публике)", "Калигинефобия (боязнь красивых женщин)", "Никтофобия (боязнь оказаться в темноте)", "Аэрофобия (боязнь летать на самолётах)", "Кинофобия (боязнь собак)", "Стенофобия (боязнь узких коридоров)", "Нет фобий", "Зоофобия (боязнь животных)", "Венерофобия (боязнь заболеть венер. заболеванием)", "Фобия толп людей", "Боязнь числа 4", "Аблутофобия (страх плавать)", "Гексакосиойгексеконтагексафобия (Страх числа 666)", "Гиппопотомонстросескиппедалофобия (Боязнь чересчур длинных слов)", "аграфобия (Боязнь секса, не может родить)", "андрофобия (Боязнь мужчин)", "гидрозофобия (Боязнь вспотеть)", "земмифобия (Боязнь кротов)", "дисморфофобия (Боязнь физических недостатков в собственной внешности)", "Анатидаефобия (Боязнь того, что где-то в мире есть утка, которая следит за Вами)", "ятрофобия(Боязнь врачей), не может быть вылечен", "хронофобия (боязнь времени)", "фазмофобия (боязнь призраков и духов)", "Боязнь бункеров", "Теофобия(Боязнь бога)"};
    public string[] hobby = new[]
    {"Самодельные вещи (одежда, обувь, аксессуары)", "Рыбалка", "Плетение (бисер, корзины, коробочки, кружева)", "Стрельба из лука", "Головоломки", "Паркур", "Серфинг", "Космология", "Смотрит аниме", "Охота", "Альпинизм", "Футбол", "Радиовещание", "Выращивание растений", "Играет на флейте", "Метание ножей и топоров", "Массаж (все, в том числе лечебные)", "Геймер", "Фокусы", "Горные лыжи", "Психология и тренинги", "Бег", "Походы", "Пивоварня", "Читает реп", "Пчеловодство", "Кулинария", "Нет хобби", "Танцы и балет", "Бодибилдер", "Анонист", "Стримминг", "Плаванье", "Программирование", "Рисует аниме", "Жертвоприношение", "Стрельба", "Диггерство", "Игра на музыкальных инструментах", "Клоун", "Коллекционирование", "Сон", "Оригами", "Настольные игры", "Пение и караоке", "Косплей", "Робототехника", "Выращивание кристаллов", "Сборка автомата на скорость", "Кулинария", "DJ", "Выживание в лесу", "Черчение", "Работа с деревом", "Готовит вкусный шашлындос", "Работа с металлом", "Сурвивализм", "Боевые искусства", "Страйкбол", "Любительская астрономия", "Кузнечество", "Создание самодельного оружия"};
    public string[] addInf = new[]
    {"Проходил курсы сексолога", "Занимался стрельбой из лука", "Умеет ориентироваться по звёздам", "Мастер спорта по боксу", "Сидел в колонии строгого режима", "Изготовление первобытного оружия", "В детстве увлекался охотой", "Хорошо знает русскую литературу", "Ненавидит кофе", "Увлекается животноводством", "Доп. Образование - химик", "Знает, где находится бункер с оружием", "Морская болезнь", "Умеет вскрывать замки", "Читал все книги про зомби", "Верит в инопланетян", "Может оказать первую помощь", "Знания в отчистке воды", "Знает боевые искусства (мастер)", "Остался в живых на необитаемом острове", "Верит в сверхъестественное", "Пережил 5 покушений", "Выращивает растения", "Ограбил банк", "Доп. Образование - физик", "Проходил курсы психолога", "Хорошая спортивная подготовка", "Занял первое место на марафоне (50км)", "Прошёл курс по самообороне", "Обладает феноменальной памятью", "Педофил", "Зоофил", "Любитель БДСМ", "Фанат -bear grylls-", "Христианин", "Сатанист", "Атеист", "Агностик", "Участвовал в секс марафоне (Неделю назад)", "Отслужил в армии", "Лучший работник МакДональдса 2010", "Не любит Android", "Расист", "А-сексуал", "Б-сексуал", "Фемка", "Потерял сына", "K-POP ер", "Фифер", "Есть машина", "10 Млн. Подписчиков в тиктоке", "Пешка Навального", "Единоросс", "Либерал", "Коммунист", "Сбил человека на машине", "Ждёт киберпанк 2077", "Застрял в 2007 (Типо эмо)", "Считает себя хокаге", "Тупо клоун", "Готовит вкусные булочки", "Секс-гуру", "Любитель хентая", "В душе 14-летняя девочка", "Сбежал из тюрьмы", "Потомок Гитлера", "Приемник Путина", "Смотрел все фильмы на планете", "Прошёл Афганскую войну", "Прошёл все Фоллауты на 100%", "Хотел сменить пол", "Заглядывал в жерло вулкана", "Видел снежного человека", "Видит будущее", "Есть огромные бицухи", "Общался с пришельцами", "Ходил в поход на 30 дней", "Фанат звездных войн", "Фанат нинтендо", "Знает 5 языков", "Был износилован в детстве коровами", "Фанат русского рока", "Фанат русского рэпа", "Уважает пчёлок", "Сдал Егэ на 100 баллов", "ПТУшник", "Лингвист", "Любит переодеваться в женскую одежду", "Прошёл игру ==60 секунд==", "Террорист", "Проголосовал за попровки в конституции", "Прошёл все части Resident evil", "В школе по химии имел оценку 5", "В школе по биологии имел оценку 5", "В школе по обж имел оценку 5"};
    public string[] character = new[]
     {"Хитрый", "Трусливый", "Душа компании", "Терпеливый", "Трудолюбивый", "Пессимист", "Несамостоятельный", "Лидер", "Смелый", "Ленивый", "Щедрый", "Неряха", "Упёртый", "Адекватный", "Талантливый", "Сорвиголова", "Мерзкий", "Аккуратный", "Самовлюблённый", "Депрессивный", "Мстительный", "Независимый", "Мудрый", "Весёлый", "Вежливый, учтивый", "Конфликтный", "Красноречивый", "Общительный", "Образованный", "Замкнутый"};
    public string[] action = new[]
    {"Друг (не попадёшь в бункер, если человек ПОСЛЕ тебя не попадёт в бункер)", "Перегененировать у себя биологические характеристики", "Рядом с вашим бункером находится бункер, который настроен негативно против вас", "Полностью вылечить свою фобию", "Рядом бункер с 2 полностью здоровыми мужчинами химиками", "Вылечите чайлдфри любого игрока (кроме себя)", "Ты можешь защитить любого игрока (кроме себя) на 1 круг от голосования", "Бункер находится около озера", "В 50 метрах от вашего бункера находится бункер с кучей алкоголя", "У тебя есть защита на 1 игровой круг от голосования, если против тебя макс. кол-во голосов", "Минус 1 слот в бункере", "Сгенерировать новый бункер", "Перекинуть 1 голос любого игрока на голосовании (кроме своего)", "Все игроки передают профессию по часовой стрелке", "У всех игроков меняется профессия (рандомно сгенерировать)", "Вылечите фобию любого игрока (кроме себя)", "Изменить свою профессию (рандомно сгенерировать)", "В соседнем бункере живёт несколько женщин", "Друг (не попадёшь в бункер, если человек ПОСЛЕ тебя не попадёт в бункер)", "Враг (не попадёшь в бункер, если человек ПЕРЕД тобой попадёт в бункер)", "У всех игроков меняется черта характера", "Поменяйте местами багаж у двух игроков (кроме себя)", "Данная карта даёт возможность вскрыть багаж у любого ирока (кроме себя)", "Данная карта даёт возможность убить любого игрока (кроме себя)", "Сгенерировать новую катастрофу", "Враг (не попадёшь в бункер, если человек ПЕРЕД тобой попадёт в бункер)", "Плюс 1 слот в бункере", "У всех игроков меняются биологические характеристики (рандомно сгенерировать)", "В 20 метрах от вашего бункера сохранился погреб с вином", "Все игроки меняют хобби на новое (рандомно сгенерировать)", "Вы меняетесь с выбранным игроком состоянием здоровья", "Полностью вылечить состояние здоровье любого игрока (кроме себя)", "Возьмите ещё один предмет в багаж (рандомно сгенерировать)", "Снять 1 голос против себя на голосовании", "В соседнем бункере живут двое мужчин 50 лет", "У тебя есть защита на 1 игровой круг от голосования, если против тебя макс. кол-во голосов", "Вы меняетесь с выбранным игроком багажом", "Позволяет вскрыть состояние здоровье у любого игрока (кроме себя)", "Воскресить любого игрока (кроме себя)", "Открыть любую карту любого игрока на выбор (кроме себя)", "В 30 метрах от вас бункер с оружием", "На этот игровой круг ты можешь забрать голос любого игрока и голосовать за него", "Бункер находится в парке аттракционов", "Бункер находится в лесу", "В соседнем бункере находятся 2 химика", "Около вашего бункера находится АЭС", "Поменяйте свою карту хобби на новую (радномно сгенерировать)", "Около вашего бункера находится аптека", "Поменяйте свой багаж на новый (рандомно сгенерировать)", "Около вашего бункера находится огромный город"};
    public string[] baggage = new[]
    {"Винтовка", "Собрание хим элементов (каждого по 1 кг)", "Фильтр для воды", "Мачете", "Игровая приставка", "Радиостанция", "Книги", "Ферма муравьёв", "Семена овощей", "Сумка с медикаментами", "Запас пива на 12 лет", "Кальяны", "Инкубатор с яйцами", "Набор настольных игр", "Кот", "Попугай", "Компьютер (ноутбук)", "Пистолет", "Набор швеи", "Собака", "Стопка порно-журналов", "Наручники", "Топор", "Набор респираторных масок", "Переносная электростанция", "Набор инструментов", "Монтировка", "Коробка с консервами", "Швейцарский нож", "Бензопила", "Противогаз", "4 спальных мешка", "Фотоаппарат", "Гитара", "Семена пшеницы", "Телефон", "Удочка", "Колода карт", "Набор для игры в Покер", "Шуба", "Карта мира", "Часы", "Сигары", "Компас", "Книги по выживанию", "Сборник анекдотов", "Набор из 2 раций", "Игла и нитки", "Машинка для стрижки", "Коробка с презервативами", "Аниме-диски", "Таблетки от гепатита С", "Палатка", "5 литров чистого спирта", "Большая аптечка", "Самогонный аппарат", "200.000$", "Семена фруктов", "Куст смородины", "Костюм для дайвинга", "Набор огнестерльного оружия", "Надувная лодка", "Термометр", "Тетрадь с лабораторными работами по физике", "Набор юного химика", "Набор респераторов", "Мольберт", "Тепловизер", "Прибор ночного виденья", "Кирка", "Лопата", "Жилет Анатолия Вассермана", "Страпон", "Ребёнок", "Полароид", "Закуска к пиву на 12 лет", "Складная лаборатория по химии", "Электронная книга со всей библиотекой мира", "Библия", "Набор для очистки воды", "Фиильтры для противогаза", "Набор для бондажа", "Картофельные часы", "Костюм хим.защиты", "Пакеты с разными группами крови", "Лист свинца", "Килограмм Плутония-239", "Квадроцикл", "Балон с чистым воздухом", "10 л. Пустой канистры", "Батарея на 100.000 mah", "Неньютоновская жидкость"};
    public string[] catastrophe = new[]
    {"Катастрофа: ВСЕМИРНЫЙ ПОТОП: Из-за глобального потепления растают все полярные и континентальные льды, процент суши составит 15%. Вода поглотик всё вокруг. После выхода из бункера произошло нарушение климата - тропики теперь повсюду,необходимо приспособиться к новым видам растений и крупным насекомым. Остаток населения земли - люди в бункерах.", "Катастрофа: ЗОМБИ-ВИРУС: Прогрессирующее во времени и пространстве распространение инфекционного заболевания среди людей способно стать источником чрезвычайной ситауции. Люди теперь зомби. После выхода из бункера малая часть зомби бродит по земле, которая неизбежно погибнет. Остаток здорового населения - 15%.", "Катастрофа: ЯДЕРНАЯ КАТАСТРОФА: Начнётся ядерная война, радиоактивная пыль окутает всю планету, закрыв солнечный свет, и на Земле наступит долгая ядерная зима. После выхода из бункера сложности с почвой, водой, необходима дополнительная химическая обработка. Остаток населения земли - 5%.", "Катастрофа: СУПЕРВУЛКАНЫ: Супервулканами называют вулканы, производящие чрезвычайно мощные и объёмные извержения, подобные извержения приводят к тому, что ландшафт и климат нашей планеты коренным образом изменятся. После выхода из бункера глобальная засуха. Остаток населения земли - 5%.", "Катастрофа: БИОТЕРРОРИЗМ: Смертельный вирус, созданный как биологическое оружие. Выйдет из-под контроля и спровоцирует глобальную эпидемию, но после выхода из бункера выявлена мутация практически всех видов животных, растений и людей. Остаток здорового населения - 7%.", "Катастрофа: ХИМИЧЕСКАЯ ВОЙНА: В результате применения химикатов серьезно изменился экологический баланс. Был нарушен микробиологический состав почв, отравлены растения. После выхода из бункера осталась малая часть животных и растений, заражена вода и почва. Остаток здорового населения - 10%.", "Катастрофа: ПАДЕНИЕ МЕТЕОРИТА: Крупный метеорит попал в землю, что приводит к глобальным разрушениям и смене климата после выхода из бункера на земле вечная зима, остаток населения 15%"};
    public int[] profesion1 = new int[countProfession];
    public int[] health1 = new int[countHealth];
    public int[] phobia1 = new int[countPhobia];
    public int[] hobby1 = new int[countHobby];
    public int[] addInf1 = new int[countAddInf];
    public int[] character1 = new int[countCharacter];
    public int[] action1 = new int[countAction];
    public int[] baggage1 = new int[countBaggage];

    void Start()
    {
        
        Screen.SetResolution(640, 480, false);
    }

    void txtcatastrophe(Random rnd, string[] catastrophe, int count)
    {
        int k = rnd.Next(count);
        string writePath = @"C:\Bunker\Катастрофа.txt";
        using (StreamWriter sw = new StreamWriter(writePath, false, System.Text.Encoding.Default))
        {
            sw.WriteLine(catastrophe[k]);
        }
    }

    void bunkerrand(Random rnd)
    {
        int s = (rnd.Next(50, 500) / 10) * 10;
        int months = rnd.Next(1,60);
        string writePath = @"C:\Bunker\Бункер.txt";
        int[] bunker = new int[10];
        string[] bunkerstr = new string[10];
        for (int i = 0; i < 10; i++)
        {
            bunker[i] = rnd.Next(3);
            if (bunker[i] == 0) { bunkerstr[i] = "Есть"; }
            else { bunkerstr[i] = "Нет"; }

        }

        string month;
        switch (months)
        {
            case 1:
                month = " месяц";
                break;
            case 2:
                month = " месяца";
                break;
            default:
                month = " месяцев";
                break;
        }

        string[] strBnker = new string[10] { "Кухня и столовая: ", "Медицинский кабинет с набором инструментов: ", "Персональные ванные комнаты с туалетами: ", "Химическая лаборатория: ", "Тренажёрный зал: ", "Огород с теплицами: ", "Оружейный склад: ", "Спальные места: ", "Библиотека: ", "Бар: " };

        using (StreamWriter sw = new StreamWriter(writePath, false, System.Text.Encoding.Default))
        {
            sw.WriteLine("Площадь: " + s + " квадратных метров");
            sw.WriteLine("Время пребывания: " + months.ToString() + month);
            sw.WriteLine("Электричества, средств гигиены, еды и питьевой воды хватит только на время пребывания в бункере.");
            for (int i = 0; i < 10; i++)
            {
                sw.WriteLine(strBnker[i] + bunkerstr[i]);
            }
        }
    }
    public void Clear()
    {
        numberOfPlayersField.text = string.Empty;
    }

    public void StartGame()
    {
        int countPlayer = int.Parse(numberOfPlayersField.text);

        
        if (!Directory.Exists(path))
        {
            Directory.CreateDirectory(path);
        }

        txtcatastrophe(rnd, catastrophe, countCatastrophe);
        bunkerrand(rnd);

        for (int i = 1; i <= countPlayer; i++)
        {
            num = all(profesion1, countProfession, rnd);
            person[0] = profession[num];
            profesion1[num] = 1;

            person[1] = biology(rnd);

            num = all(health1, countHealth, rnd);
            person[2] = health[num];
            health1[num] = 1;

            num = all(phobia1, countPhobia, rnd);
            person[3] = phobia[num];
            phobia1[num] = 1;

            num = all(hobby1, countHobby, rnd);
            person[4] = hobby[num];
            hobby1[num] = 1;

            num = all(addInf1, countAddInf, rnd);
            person[5] = addInf[num];
            addInf1[num] = 1;

            num = all(character1, countCharacter, rnd);
            person[6] = character[num];
            character1[num] = 1;

            num = all(baggage1, countBaggage, rnd);
            person[7] = baggage[num];
            baggage1[num] = 1;

            num = all(action1, countAction, rnd);
            person[8] = action[num];
            action1[num] = 1;

            num = all(action1, countAction, rnd);
            person[9] = action[num];
            action1[num] = 1;

            txt(person, i);
            for (int j = 0; j < 10; j++) { person[j] = ""; }
        }
        nextWindow.SetActive(true);
    }

    public void Exit()
    {
        Application.Quit();
    }

    void txt(string[] person, int i)
    {
        string writePath = @"C:\Bunker\" + i.ToString() + ".txt";

        using (StreamWriter sw = new StreamWriter(writePath, false, System.Text.Encoding.Default))
        {
            sw.WriteLine("Профессия: " + person[0]);
            sw.WriteLine("Биол. Признаки: " + person[1]);
            sw.WriteLine("Состояние здоровья: " + person[2]);
            sw.WriteLine("Фобия: " + person[3]);
            sw.WriteLine("Хобби: " + person[4]);
            sw.WriteLine("Доп. информация: " + person[5]);
            sw.WriteLine("Черта характера: " + person[6]);
            sw.WriteLine("Багаж: " + person[7]);
            sw.WriteLine("Карта 1: " + person[8]);
            sw.WriteLine("Карта 2: " + person[9]);
        }
    }

    int all(int[] arr1, int count, Random rnd)
    {
        int numb = rnd.Next(count);
        while (arr1[numb] == 1)
        {
            numb = rnd.Next(count);
        }
        return numb;
    }

    string biology(Random rnd)
    {
        int age = rnd.Next(15, 80);
        int childfree = rnd.Next(2); //0 бесплоден, 1 чайлдфри
        int male = rnd.Next(2);  //0 мужчина, 1 женщина 
        string s = "";
        if (male == 0)
        { s = s + "Мужчина "; }
        else
        { s = s + "Женщина "; }
        s = s + age.ToString();
        if (male == 1 && age >= 50)
        { s = s + " Бесплодна по возрасту"; }
        else
        {
            int child = rnd.Next(2);   //0 имеет 1 не имеет
            if (child == 1)
            {
                if (childfree == 0) { s = s + " Бесплоден"; }
                else if (childfree == 1) { s = s + " Чайлдфри"; }
            }
        }
        return s;
    }

    void changOut(string card, string type, int i)
    {
        string writePath = @"C:\Bunker\Замены\" + i.ToString() + " " + type + ".txt";
        using (StreamWriter sw = new StreamWriter(writePath, false, System.Text.Encoding.Default))
        {
            sw.WriteLine(type + ": " + card);
        }
        numb += 1;
    }

    void write(int numb)
    {
        fileText.text = "Следующий файл будет сохранён под названием " + numb.ToString() + ".txt";
    }

    public void Changes()
    {       
        switch (int.Parse(numberOfChangesField.text))
        {
            case 0:
                num = rnd.Next(countCatastrophe);
                change = catastrophe[num];
                changOut(change, "Катастрофа", numb);
                break;
            case 1:
                num = all(profesion1, countProfession, rnd);
                profesion1[num] = 1;
                change = profession[num];
                changOut(change, "Профессия", numb);
                break;
            case 2:
                change = biology(rnd);
                changOut(change, "Биол. Признаки", numb);
                break;
            case 3:
                num = all(health1, countHealth, rnd);
                change = health[num];
                health1[num] = 1;
                changOut(change, "Состояние здоровья", numb);
                break;
            case 4:
                num = all(phobia1, countPhobia, rnd);
                change = phobia[num];
                phobia1[num] = 1;
                changOut(change, "Фобия", numb);
                break;
            case 5:
                num = all(hobby1, countHobby, rnd);
                change = hobby[num];
                hobby1[num] = 1;
                changOut(change, "Хобби", numb);
                break;
            case 6:
                num = all(addInf1, countAddInf, rnd);
                change = addInf[num];
                addInf1[num] = 1;
                changOut(change, "Доп. информация", numb);
                break;
            case 7:
                num = all(character1, countCharacter, rnd);
                change = character[num];
                character1[num] = 1;
                changOut(change, "Черта характера", numb);
                break;
            case 8:
                num = all(baggage1, countBaggage, rnd);
                change = baggage[num];
                baggage1[num] = 1;
                changOut(change, "Багаж", numb);
                break;
            case 9:
                num = all(action1, countAction, rnd);
                change = action[num];
                action1[num] = 1;
                changOut(change, "Карта действия", numb);
                break;
            case 10:
                bunkerrand(rnd);
                break;
            default:
                break;
        }
        
        if (int.Parse(numberOfChangesField.text) != 10)
            write(numb);
        numberOfChangesField.text = string.Empty;
    }
}
